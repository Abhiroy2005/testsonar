name: Pull Request PipeLine

on:
  push:
    branches:
      - 'feature/**'
  workflow_dispatch:


jobs:
  QualityGate-CodeAnalysis:
    name: Generate Static Analysis Report
    runs-on: ubuntu-latest
    env: 
      SONAR_TOKEN: 4a02ae8c85ebd96f828e1906bdb233a423445a95
    steps:
      - uses: actions/checkout@v2
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }} 

  QualityGate-CodeCoverage:
    name: Generate Code Coverage Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.8
      - name: Generate Test Report
        run: |
          pip install pytest
          pip install pytest-cov
          pip install -r requirements.txt
          pytest --cov=./ --cov-report=xml
      
      - name: Publish Quality Gate Report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
  
  ValidateTerraform:
    name: Initialize and Validate Terraform
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Initialize Terraform
        run: |
          docker-compose -f deploy/docker-compose.yml run --rm terraform init -backend=false
          docker-compose -f deploy/docker-compose.yml run --rm terraform validate
          docker-compose -f deploy/docker-compose.yml run --rm terraform fmt -check   
        
  
             